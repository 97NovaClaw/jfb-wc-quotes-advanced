<?php
/**
 * Customer Estimate Request Email Template
 *
 * Based on WooCommerce customer-processing-order template.
 * This template can be overridden by copying it to yourtheme/woocommerce/emails/customer-estimate-request.php.
 */

if ( ! defined( 'ABSPATH' ) ) {
    exit;
}

/*
 * @hooked WC_Emails::email_header() Output the email header
 */
do_action( 'woocommerce_email_header', $email_heading, $email ); ?>

<?php /* Custom opening paragraph */ ?>
<p><?php printf( esc_html__( 'Hi %s,', 'jfb-wc-quotes-advanced' ), esc_html( $order->get_billing_first_name() ) ); ?></p>
<p><?php esc_html_e( 'Here are the details for your estimate request:', 'jfb-wc-quotes-advanced' ); ?></p>
<?php /* End custom opening */ ?>

<?php

/*
 * @hooked WC_Emails::order_details() Shows the order details table.
 * @hooked WC_Structured_Data::generate_order_data() Generates structured data.
 * @hooked WC_Structured_Data::output_structured_data() Outputs structured data.
 * @since 2.5.0
 */
// We'll add a specific title for the order details section if desired
// Otherwise, the default [Order #...] is generated by the action below.
 // $order_details_heading = sprintf( esc_html__( 'Estimate Request #%s Details', 'jfb-wc-quotes-advanced' ), $order->get_order_number() );
 // echo '<h2>' . $order_details_heading . '</h2>';
do_action( 'woocommerce_email_order_details', $order, $sent_to_admin, $plain_text, $email );

/*
 * @hooked WC_Emails::order_meta() Shows order meta data.
 */
// You might want to hide default order meta if it's not relevant for a quote
// remove_action( 'woocommerce_email_order_meta', array( 'WC_Emails', 'order_meta' ), 10 ); // Example of removing default meta display
// Instead, display custom JE meta below or within the message body
// do_action( 'woocommerce_email_order_meta', $order, $sent_to_admin, $plain_text, $email );


/*
 * Display Custom Message Body (with placeholder replacement done in the WC_Email class)
 */
// The $additional_content variable will be populated by our custom Email class
if ( !empty( $additional_content ) ) {
     echo wp_kses_post( wpautop( wptexturize( $additional_content ) ) );
}

/*
 * Display Custom JE Fields (Optional - List them explicitly)
 * This section is optional if you prefer handling them via placeholders in the message body.
 */
 $je_keys_string = jfbwqa_read_config()['jetengine_keys'] ?? ''; // Read JE keys from config
 $je_keys = !empty($je_keys_string) ? preg_split( '/\r\n|\r|\n/', $je_keys_string ) : [];
 $has_je_meta = false;
 ob_start(); // Start buffer to capture JE meta output
 if (!empty($je_keys)) {
    echo '<h2>' . esc_html__( 'Additional Details', 'jfb-wc-quotes-advanced' ) . '</h2>';
    echo '<table cellspacing="0" cellpadding="6" style="width: 100%; font-family: \'Helvetica Neue\', Helvetica, Roboto, Arial, sans-serif; margin-bottom: 40px;" border="1">';
    echo '<tbody>';
    foreach ($je_keys as $key) {
        $trimmed_key = trim($key);
        if (empty($trimmed_key)) continue;
        $value = $order->get_meta( $trimmed_key ); // Use the exact key
        if ( !empty( $value ) ) {
             $has_je_meta = true;
             // Try to find a label for the key if possible (e.g., from mapping or a helper function)
             // For now, just use the key itself formatted nicely.
             $label = ucwords( str_replace( '_', ' ', $trimmed_key ) );
             echo '<tr><th scope="row" style="text-align:left;">' . esc_html( $label ) . ':</th>';
             echo '<td style="text-align:left;">' . wp_kses_post( nl2br( esc_html( $value ) ) ) . '</td></tr>';
        }
    }
    echo '</tbody>';
    echo '</table>';
 }
 $je_meta_output = ob_get_clean(); // Get buffered output
 if ($has_je_meta) {
     echo $je_meta_output; // Only display if there was actually JE meta with values
 }


/*
 * @hooked WC_Emails::customer_details() Shows customer details
 * @hooked WC_Emails::email_address() Shows email address
 */
do_action( 'woocommerce_email_customer_details', $order, $sent_to_admin, $plain_text, $email );


/*
 * @hooked WC_Emails::email_footer() Output the email footer
 */
do_action( 'woocommerce_email_footer', $email );