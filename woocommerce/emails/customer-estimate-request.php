<?php
/**
 * Customer Estimate Request Email Template
 *
 * Based on WooCommerce customer-processing-order template.
 * This template can be overridden by copying it to yourtheme/woocommerce/emails/customer-estimate-request.php.
 * 
 * This template handles emails sent to customers when they request a quote/estimate.
 * It supports JetEngine custom fields and dynamic content from the plugin settings.
 */

if ( ! defined( 'ABSPATH' ) ) {
    exit;
}

/*
 * @hooked WC_Emails::email_header() Output the email header
 */
do_action( 'woocommerce_email_header', $email_heading, $email ); ?>

<?php /* Custom opening paragraph */ ?>
<p><?php printf( esc_html__( 'Hi %s,', 'jfb-wc-quotes-advanced' ), esc_html( $order->get_billing_first_name() ) ); ?></p>
<?php /* Remove the static text below if it's already in your default body */ ?>
<?php /* <p><?php esc_html_e( 'Here are the details for your estimate request:', 'jfb-wc-quotes-advanced' ); ?></p> */ ?>
<?php /* End custom opening */ ?>

<?php
// *** ADDED: Output the main email body content from settings ***
// This variable contains the text from your "Email Body Template" setting,
// with placeholders like [Order Details Table] already processed.
if ( ! empty( $email_body_content ) ) {
    // Use wpautop to add paragraph breaks based on newlines in your setting
    // Use wp_kses_post to allow basic HTML potentially generated by placeholders
    echo wp_kses_post( wpautop( wptexturize( $email_body_content ) ) );
}
// *** END ADDED ***


/*
 * @hooked WC_Emails::order_details() Shows the order details table.
 * @hooked WC_Structured_Data::generate_order_data() Generates structured data.
 * @hooked WC_Structured_Data::output_structured_data() Outputs structured data.
 * @since 2.5.0
 */
// NOTE: The [Order Details Table] placeholder in your settings uses wc_get_template_html,
// which INTERNALLY calls this hook. Calling it *again* here might duplicate the table
// unless you remove the placeholder from your settings OR remove/comment out the line below.
// If you keep the placeholder, comment out the do_action below.
// If you remove the placeholder, keep the do_action below active.
// For now, let's assume you want the placeholder method.
// do_action( 'woocommerce_email_order_details', $order, $sent_to_admin, $plain_text, $email );

/*
 * @hooked WC_Emails::order_meta() Shows order meta data.
 */
// You might want to hide default order meta if it's not relevant for a quote
// remove_action( 'woocommerce_email_order_meta', array( 'WC_Emails', 'order_meta' ), 10 ); // Example of removing default meta display
// Instead, display custom JE meta below or within the message body
// do_action( 'woocommerce_email_order_meta', $order, $sent_to_admin, $plain_text, $email );


/*
 * Display Custom Admin Message (This part is likely correct)
 */
// The $additional_content variable will be populated by our custom Email class
if ( !empty( $additional_content ) ) {
     echo '<h2>' . esc_html__( 'Message from Admin', 'jfb-wc-quotes-advanced' ) . '</h2>'; // Optional heading for clarity
     echo wp_kses_post( wpautop( wptexturize( $additional_content ) ) );
}

/*
 * Display Custom JE Fields (Optional - This section seems fine but might be redundant if placeholders are used)
 */
 $je_keys_string = ''; // Initialize
 // Safely try to get options and then the keys
 $jfbwqa_options = function_exists('jfbwqa_get_options') ? jfbwqa_get_options() : null;
 if ($jfbwqa_options && isset($jfbwqa_options['jetengine_keys'])) {
    $je_keys_string = $jfbwqa_options['jetengine_keys'];
 }
 // $je_keys_string = jfbwqa_read_config()['jetengine_keys'] ?? ''; // <-- This function doesn't exist, use jfbwqa_get_options()
 $je_keys = !empty($je_keys_string) ? preg_split( '/\r\n|\r|\n/', trim($je_keys_string) ) : [];
 $has_je_meta = false;
 ob_start(); // Start buffer to capture JE meta output
 if (!empty($je_keys)) {
    $show_je_details_section = false; // Flag to check if any JE meta has value
    $je_meta_table_content = ''; // Build content first
    foreach ($je_keys as $key) {
        $trimmed_key = trim($key);
        if (empty($trimmed_key)) continue;
        $value = $order->get_meta( $trimmed_key ); // Use the exact key
        if ( !empty( $value ) ) {
             $show_je_details_section = true; // Mark that we found something to show
             // Try to find a label for the key if possible (e.g., from mapping or a helper function)
             // For now, just use the key itself formatted nicely.
             $label = ucwords( str_replace( '_', ' ', $trimmed_key ) );
             $je_meta_table_content .= '<tr><th scope="row" style="text-align:left; border: 1px solid #eee; padding: 12px;">' . esc_html( $label ) . ':</th>';
             $je_meta_table_content .= '<td style="text-align:left; border: 1px solid #eee; padding: 12px;">' . wp_kses_post( nl2br( esc_html( is_array($value) ? implode(', ', $value) : $value ) ) ) . '</td></tr>'; // Handle potential arrays
        }
    }

    // Only output the section if there was content
    if ($show_je_details_section) {
        echo '<h2>' . esc_html__( 'Additional Details', 'jfb-wc-quotes-advanced' ) . '</h2>';
        echo '<table cellspacing="0" cellpadding="6" style="width: 100%; font-family: \'Helvetica Neue\', Helvetica, Roboto, Arial, sans-serif; margin-bottom: 40px; border: 1px solid #eee; border-collapse: collapse;" border="1">';
        echo '<tbody>';
        echo $je_meta_table_content; // Output the rows we built
        echo '</tbody>';
        echo '</table>';
        $has_je_meta = true; // Keep original flag if needed elsewhere, though might be redundant now
    }
 }
 // No need for ob_start/clean if we build the string directly


/*
 * @hooked WC_Emails::customer_details() Shows customer details
 * @hooked WC_Emails::email_address() Shows email address
 */
do_action( 'woocommerce_email_customer_details', $order, $sent_to_admin, $plain_text, $email );


/*
 * @hooked WC_Emails::email_footer() Output the email footer
 */
do_action( 'woocommerce_email_footer', $email );